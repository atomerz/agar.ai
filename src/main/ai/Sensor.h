#pragma once

#include <string>

namespace agarai
{
  enum SensorType {
    LOCATION_X,
    LOCATION_Y,
    MASS,
    // biggest neighbor
    BIGGEST_NEIGHBOR_NE_MASS,
    BIGGEST_NEIGHBOR_NE_DISTANCE,
    BIGGEST_NEIGHBOR_NW_MASS,
    BIGGEST_NEIGHBOR_NW_DISTANCE,
    BIGGEST_NEIGHBOR_SW_MASS,
    BIGGEST_NEIGHBOR_SW_DISTANCE,
    BIGGEST_NEIGHBOR_SE_MASS,
    BIGGEST_NEIGHBOR_SE_DISTANCE,
    // smallest neighbor
    SMALLEST_NEIGHBOR_NE_MASS,
    SMALLEST_NEIGHBOR_NE_DISTANCE,
    SMALLEST_NEIGHBOR_NW_MASS,
    SMALLEST_NEIGHBOR_NW_DISTANCE,
    SMALLEST_NEIGHBOR_SW_MASS,
    SMALLEST_NEIGHBOR_SW_DISTANCE,
    SMALLEST_NEIGHBOR_SE_MASS,
    SMALLEST_NEIGHBOR_SE_DISTANCE,
    // closest food
    CLOSEST_FOOD_NE_MASS,
    CLOSEST_FOOD_NE_DISTANCE,
    CLOSEST_FOOD_NW_MASS,
    CLOSEST_FOOD_NW_DISTANCE,
    CLOSEST_FOOD_SW_MASS,
    CLOSEST_FOOD_SW_DISTANCE,
    CLOSEST_FOOD_SE_MASS,
    CLOSEST_FOOD_SE_DISTANCE,
    // biggest food
    BIGGEST_FOOD_NE_MASS,
    BIGGEST_FOOD_NE_DISTANCE,
    BIGGEST_FOOD_NW_MASS,
    BIGGEST_FOOD_NW_DISTANCE,
    BIGGEST_FOOD_SW_MASS,
    BIGGEST_FOOD_SW_DISTANCE,
    BIGGEST_FOOD_SE_MASS,
    BIGGEST_FOOD_SE_DISTANCE,
    // closest threat
    CLOSEST_THREAT_NE_MASS,
    CLOSEST_THREAT_NE_DISTANCE,
    CLOSEST_THREAT_NW_MASS,
    CLOSEST_THREAT_NW_DISTANCE,
    CLOSEST_THREAT_SW_MASS,
    CLOSEST_THREAT_SW_DISTANCE,
    CLOSEST_THREAT_SE_MASS,
    CLOSEST_THREAT_SE_DISTANCE,
    NUM_SENSES,
    // TODO:
    // FOOD_DENSITY
    // THREAT_DENSITY
  };

  std::string sensorShortName(SensorType sensor);

  class Sensor {
    public:
      virtual float get(SensorType type) = 0;
  };
}
